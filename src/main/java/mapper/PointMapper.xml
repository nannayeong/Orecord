<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="impl.PointImpl"> 
	<!-- 유저 전체정보 조회 -->
	<select id="selectUserInfo" resultType="model.MemberDTO" parameterType="String">
		SELECT * FROM member WHERE id=#{loginId}
	</select>

	<!-- 후원하는 사람 포인트 감소 -->
	<select id="updateSponsorPoint">
		update member set myPoint=#{-포인트} where id=#{후원하는 사람 아이디}
	</select>
	
	<!-- 후원받는 사람 포인트 감소 -->
	<select id="updatePatronPoint">
		update member set myPoint=#{+포인트} where id=#{후원받는 사람 아이디}
	</select>

	<!-- 충전내역 건수 조회 -->
	<select id="selectChargeLogTotalCount" resultType="int" parameterType="hashmap">
		SELECT count(*)
		FROM chargeLog 
    WHERE id=#{loginId} AND 
    	trunc(regidate) between #{fromDate} and #{toDate}
    ORDER BY regidate DESC
	</select>
	<!-- 충전내역 조회 -->
	<select id="selectChargeLog" resultType="model.ChargeDTO" parameterType="hashmap">
		SELECT * 
		FROM (
					SELECT A.*, rownum recordNum 
					FROM (
								SELECT regidate, chargePoint, paymentType
								FROM chargeLog
								WHERE id=#{loginId} AND 
									trunc(regidate) between #{fromDate} and #{toDate}
    						ORDER BY regidate DESC
					) A
		)
		WHERE recordNum between #{startRecord} and #{endRecord}
	</select>
	
	
	<!-- 후원한내역 건수 조회 -->
	<select id="selectSponsorLogTotalCount" resultType="int" parameterType="hashmap">
		SELECT count(*)
		FROM sponsorshipLog 
    WHERE sponsorId=#{loginId} AND 
    	trunc(regidate) between #{fromDate} and #{toDate}
    ORDER BY regidate DESC
	</select>
	<!-- 후원한내역 조회 -->
	<select id="selectSponsorLog" resultType="model.SponsorshipDTO" parameterType="hashmap">
		SELECT * 
		FROM (
					SELECT A.*, rownum recordNum 
					FROM (
								SELECT regidate, sponPoint, patronId
								FROM sponsorshipLog
								WHERE sponsorId=#{loginId} AND 
									trunc(regidate) between #{fromDate} and #{toDate}
    						ORDER BY regidate DESC
					) A
		)
		WHERE recordNum between #{startRecord} and #{endRecord}
	</select>
	
	
	<!-- 후원 받은 내역 건수 조회 -->
	<select id="selectPatronLogTotalCount" resultType="int" parameterType="hashmap">
		SELECT count(*)
		FROM sponsorshipLog 
    WHERE patronId=#{loginId} AND 
    	trunc(regidate) between #{fromDate} and #{toDate}
    ORDER BY regidate DESC
	</select>
	<!-- 후원 받은 내역 조회 -->
	<select id="selectPatronLog" resultType="model.SponsorshipDTO" parameterType="hashmap">
		SELECT * 
		FROM (
					SELECT A.*, rownum recordNum 
					FROM (
								SELECT regidate, sponPoint, sponsorId
								FROM sponsorshipLog
								WHERE patronId=#{loginId} AND 
									trunc(regidate) between #{fromDate} and #{toDate}
    						ORDER BY regidate DESC
					) A
		)
		WHERE recordNum between #{startRecord} and #{endRecord}
	</select>
	
	
	<!-- 환전내역 건수 조회 -->
	<select id="selectExchangeLogTotalCount" resultType="int" parameterType="hashmap">
		SELECT count(*)
		FROM exchangeLog 
    WHERE id=#{loginId} AND 
    	trunc(regidate) between #{fromDate} and #{toDate}
    ORDER BY regidate DESC
	</select>
	<!-- 환전내역 조회 -->
	<select id="selectExchangeLog" resultType="model.ExchangeDTO" parameterType="hashmap">
		SELECT * 
		FROM (
					SELECT A.*, rownum recordNum 
					FROM (
								SELECT regidate, exchangePoint, exchangeMoney, exchangeResult
								FROM exchangeLog
								WHERE id=#{loginId} AND 
									trunc(regidate) between #{fromDate} and #{toDate}
    						ORDER BY regidate DESC
					) A
		)
		WHERE recordNum between #{startRecord} and #{endRecord}
	</select>
	
	
	<!-- 결제후 포인트 내역 삽입 -->
	<select id="insertChargeLog" parameterType="hashmap">
		INSERT INTO chargeLog(idx, id, totalPayment, vat, chargePoint, paymentType, paymentResult, regidate)
    	VALUES (seq_chargeLog.nextval, #{loginId}, #{totalPayment}, #{VAT}, #{chargePoint}, #{paymentType}, default, default)
	</select>
</mapper>
